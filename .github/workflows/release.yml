name: Release Pipeline

on:
  push:
    tags:
      - "*"

permissions:
  contents: read

env:
  DOTNET_NOLOGO: true # Disable the .NET logo
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true # Disable the .NET first time experience
  DOTNET_CLI_TELEMETRY_OPTOUT: true # Disable sending .NET CLI telemetry

jobs:
  create-draft-release:
    name: Create Release draft
    permissions: write-all
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create-release.outputs.upload_url }}
      release_id: ${{ steps.create-release.outputs.id }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2.4.2

      - name: release
        uses: actions/create-release@v1
        id: create_release
        with:
          draft: true
          prerelease: false
          release_name: ${{ github.ref }}
          tag_name: ${{ github.ref }}
          body_path: CHANGELOG.md
        env:
          GITHUB_TOKEN: ${{ github.token }}

      - name: Set upload_url output
        id: step_upload_url
        run: echo "::set-output name=upload_url::${{ steps.create_release.outputs.upload_url }}"

      - name: Set release_id output
        id: step_release_id
        run: echo "::set-output name=release_id::${{ steps.create_release.outputs.id }}"

  # MAUI Android Build
  build-android:
    runs-on: windows-2022
    name: Android Build
    needs: create-draft-release
    steps:
      - name: Checkout
        uses: actions/checkout@v2.4.2

      - name: Setup .NET 6
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 6.0.x

      - name: Install MAUI Workload
        run: dotnet workload install maui --ignore-failed-sources

      - name: Restore Dependencies
        run: dotnet restore TestApp/TestApp.csproj

      - name: Build MAUI Android
        run: dotnet publish TestApp/TestApp.csproj -c Release -f net6.0-android --no-restore

      - name: Upload Android artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ needs.create-draft-release.outputs.upload_url }}
          asset_path: TestApp/bin/Release/net6.0-android/*Signed.apk
          asset_name: TestApp-Android-${{ github.ref }}.apk
          asset_content_type: application/apk

  # MAUI Windows Build
  build-windows:
    runs-on: windows-2022
    name: Windows Build
    needs: create-draft-release
    steps:
      - name: Checkout
        uses: actions/checkout@v2.4.2

      - name: Setup .NET 6
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 6.0.x

      - name: Install MAUI Workload
        run: dotnet workload install maui --ignore-failed-sources

      - name: Restore Dependencies
        run: dotnet restore TestApp/TestApp.csproj

      - name: Build MAUI Windows
        run: dotnet publish TestApp/TestApp.csproj -c Release -f net6.0-windows10.0.19041.0 --no-restore

      - name: Upload Windows artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ needs.create-draft-release.outputs.upload_url }}
          asset_path: TestApp/bin/Release/net6.0-windows10.0.19041.0/win10-x64/AppPackages/TestApp*/TestApp*.msix
          asset_name: TestApp-Windows-${{ github.ref }}.msix
          asset_content_type: application/msix

  # MAUI iOS Build
  build-ios:
    runs-on: macos-12
    name: iOS Build
    needs: create-draft-release
    steps:
      - name: Checkout
        uses: actions/checkout@v2.4.2

      - name: Setup .NET 6
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 6.0.x

      - name: Install MAUI Workload
        run: dotnet workload install maui --ignore-failed-sources

      - name: Restore Dependencies
        run: dotnet restore TestApp/TestApp.csproj

      - name: Build MAUI iOS
        run: dotnet build TestApp/TestApp.csproj -c Release -f net6.0-ios --no-restore /p:buildForSimulator=True /p:packageApp=True /p:ArchiveOnBuild=False

      - name: Upload iOS artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ needs.create-draft-release.outputs.upload_url }}
          asset_path: TestApp/bin/Release/net6.0-ios/iossimulator-x64/**/*.app
          asset_name: TestApp-iOS-${{ github.ref }}.app
          asset_content_type: application/app

  # MAUI MacCatalyst Build
  build-mac:
    runs-on: macos-12
    name: MacCatalyst Build
    needs: create-draft-release
    steps:
      - name: Checkout
        uses: actions/checkout@v2.4.2

      - name: Setup .NET 6
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 6.0.x

      - name: Install MAUI Workload
        run: dotnet workload install maui --ignore-failed-sources

      - name: Restore Dependencies
        run: dotnet restore TestApp/TestApp.csproj

      - name: Build MAUI MacCatalyst
        run: dotnet publish TestApp/TestApp.csproj -c Release -f net6.0-maccatalyst --no-restore -p:BuildIpa=True

      - name: Upload MacCatalyst artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ needs.create-draft-release.outputs.upload_url }}
          asset_path: TestApp/bin/Release/net6.0-maccatalyst/maccatalyst-x64/publish/*.pkg
          asset_name: TestApp-Mac-${{ github.ref }}.pkg
          asset_content_type: application/pkg

  publish-release:
    runs-on: ubuntu-latest
    name: Publish Release
    needs: [create-draft-release, build-android, build-ios, build-windows, build-mac]
    steps:
      - name: Publish draft
        uses: eregon/publish-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          release_id: ${{ needs.create-draft-release.outputs.release_id }}
